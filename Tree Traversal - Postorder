
##Iterative Solution##
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def postorderTraversal(self, root: TreeNode) -> List[int]:
        #left->right->root
        stack=[(False,root)]
        res=[]
        while stack:
            flag,val=stack.pop()
            if val:
                if not flag:
                    stack.append((True,val))
                    stack.append((False,val.right))
                    stack.append((False,val.left))
                else:
                    res.append(val.val)
        return res


##Recursive Solution ##
      if not root:
            return []
        else:
            return self.postorderTraversal(root.left) + self.postorderTraversal(root.right) + [root.val]
